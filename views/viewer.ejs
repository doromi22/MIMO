<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= comic.title %> - Viewer</title>
    <link rel="stylesheet" href="/styles/style.css">
    <script src="https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.min.js"></script>
    <style>
        .viewer-container {
            display: flex;
            flex-direction: column;
            align-items: center;
        }
        .page-container {
            display: flex;
            flex-direction: row-reverse;
            justify-content: center;
            width: 100%;
            max-width: 1200px;
            margin: 20px 0;
            position: relative;
        }
        .page {
            width: 50%;
            height: auto;
            background-color: #fff;
            object-fit: contain;
            position: relative;
        }
        .blank-page {
            background-color: transparent;
        }
        .toggle-button {
            position: absolute;
            top: 10px;
            right: 10px;
        }
        @media (max-width: 768px) {
            .page {
                width: 100%;
            }
        }
    </style>
</head>
<body>

    <div class="viewer-container">
        <h1><%= comic.title %></h1>
        <div class="page-container">
            <canvas id="page1" class="page"></canvas>
            <canvas id="page2" class="page"></canvas>
            <button id="togglePage1" class="toggle-button">Toggle Page 1</button>
        </div>
        <button id="prevButton">Previous</button>
        <button id="nextButton">Next</button>
    </div>

    <script>
        const url = '<%= comic.pdf %>';
        let pdfDoc = null,
            currentPage = 1,
            totalPageCount = 0,
            addBlankPage = <%= pageStatus %>;

        const page1 = document.getElementById('page1');
        const page2 = document.getElementById('page2');
        const togglePage1 = document.getElementById('togglePage1');
        const prevButton = document.getElementById('prevButton');
        const nextButton = document.getElementById('nextButton');

        pdfjsLib.GlobalWorkerOptions.workerSrc = 'https://cdnjs.cloudflare.com/ajax/libs/pdf.js/2.6.347/pdf.worker.min.js';

        pdfjsLib.getDocument(url).promise.then(pdfDoc_ => {
            pdfDoc = pdfDoc_;
            totalPageCount = pdfDoc.numPages;
            renderPages();
        });

        function renderPages() {
            renderPage(currentPage, page1);
            if (currentPage + 1 <= totalPageCount) {
                renderPage(currentPage + 1, page2);
            } else {
                clearCanvas(page2);
            }
        }

        function renderPage(pageNumber, canvas) {
            pdfDoc.getPage(pageNumber).then(page => {
                const viewport = page.getViewport({ scale: 1.0 });
                const context = canvas.getContext('2d');
                canvas.height = viewport.height;
                canvas.width = viewport.width;

                const renderContext = {
                    canvasContext: context,
                    viewport: viewport
                };
                page.render(renderContext);
            });
        }

        function renderBlankPage(canvas) {
            const context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);
            canvas.width = 800; // Width of the blank page
            canvas.height = 1200; // Height of the blank page
            context.fillStyle = "#ffffff"; // Background color of the blank page
            context.fillRect(0, 0, canvas.width, canvas.height);
        }

        function clearCanvas(canvas) {
            const context = canvas.getContext('2d');
            context.clearRect(0, 0, canvas.width, canvas.height);
        }

        togglePage1.addEventListener('click', () => {
            const action = addBlankPage ? 'remove' : 'add';
            fetch('/add-blank-page', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify({ comicId: <%= comic.id %>, action })
            })
            .then(response => {
                if (response.redirected) {
                    window.location.href = response.url;
                }
            })
            .catch(error => {
                console.error('Error:', error);
            });
        });

        prevButton.addEventListener('click', () => {
            if (currentPage > 1) {
                currentPage -= 2;
                renderPages();
            }
        });

        nextButton.addEventListener('click', () => {
            if (currentPage + 2 <= totalPageCount) {
                currentPage += 2;
                renderPages();
            }
        });
    </script>
</body>
</html>
